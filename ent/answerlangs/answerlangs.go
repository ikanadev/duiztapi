// Code generated by entc, DO NOT EDIT.

package answerlangs

const (
	// Label holds the string label denoting the answerlangs type in the database.
	Label = "answer_langs"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldText holds the string denoting the text field in the database.
	FieldText = "text"

	// EdgeAnswer holds the string denoting the answer edge name in mutations.
	EdgeAnswer = "answer"
	// EdgeI18n holds the string denoting the i18n edge name in mutations.
	EdgeI18n = "i18n"

	// Table holds the table name of the answerlangs in the database.
	Table = "answer_langs"
	// AnswerTable is the table the holds the answer relation/edge.
	AnswerTable = "answer_langs"
	// AnswerInverseTable is the table name for the Answer entity.
	// It exists in this package in order to avoid circular dependency with the "answer" package.
	AnswerInverseTable = "answers"
	// AnswerColumn is the table column denoting the answer relation/edge.
	AnswerColumn = "answer_langs"
	// I18nTable is the table the holds the i18n relation/edge.
	I18nTable = "answer_langs"
	// I18nInverseTable is the table name for the I18n entity.
	// It exists in this package in order to avoid circular dependency with the "i18n" package.
	I18nInverseTable = "i18ns"
	// I18nColumn is the table column denoting the i18n relation/edge.
	I18nColumn = "i18n_answer_langs"
)

// Columns holds all SQL columns for answerlangs fields.
var Columns = []string{
	FieldID,
	FieldText,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the AnswerLangs type.
var ForeignKeys = []string{
	"answer_langs",
	"i18n_answer_langs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
