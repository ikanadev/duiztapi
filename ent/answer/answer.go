// Code generated by entc, DO NOT EDIT.

package answer

const (
	// Label holds the string label denoting the answer type in the database.
	Label = "answer"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"

	// EdgeLangs holds the string denoting the langs edge name in mutations.
	EdgeLangs = "langs"
	// EdgeResponses holds the string denoting the responses edge name in mutations.
	EdgeResponses = "responses"
	// EdgeQuestion holds the string denoting the question edge name in mutations.
	EdgeQuestion = "question"

	// Table holds the table name of the answer in the database.
	Table = "answers"
	// LangsTable is the table the holds the langs relation/edge.
	LangsTable = "answer_langs"
	// LangsInverseTable is the table name for the AnswerLangs entity.
	// It exists in this package in order to avoid circular dependency with the "answerlangs" package.
	LangsInverseTable = "answer_langs"
	// LangsColumn is the table column denoting the langs relation/edge.
	LangsColumn = "answer_langs"
	// ResponsesTable is the table the holds the responses relation/edge.
	ResponsesTable = "responses"
	// ResponsesInverseTable is the table name for the Response entity.
	// It exists in this package in order to avoid circular dependency with the "response" package.
	ResponsesInverseTable = "responses"
	// ResponsesColumn is the table column denoting the responses relation/edge.
	ResponsesColumn = "answer_responses"
	// QuestionTable is the table the holds the question relation/edge.
	QuestionTable = "answers"
	// QuestionInverseTable is the table name for the Question entity.
	// It exists in this package in order to avoid circular dependency with the "question" package.
	QuestionInverseTable = "questions"
	// QuestionColumn is the table column denoting the question relation/edge.
	QuestionColumn = "question_answers"
)

// Columns holds all SQL columns for answer fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Answer type.
var ForeignKeys = []string{
	"question_answers",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
