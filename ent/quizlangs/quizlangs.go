// Code generated by entc, DO NOT EDIT.

package quizlangs

const (
	// Label holds the string label denoting the quizlangs type in the database.
	Label = "quiz_langs"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeQuiz holds the string denoting the quiz edge name in mutations.
	EdgeQuiz = "quiz"
	// EdgeI18n holds the string denoting the i18n edge name in mutations.
	EdgeI18n = "i18n"

	// Table holds the table name of the quizlangs in the database.
	Table = "quiz_langs"
	// QuizTable is the table the holds the quiz relation/edge.
	QuizTable = "quiz_langs"
	// QuizInverseTable is the table name for the Quiz entity.
	// It exists in this package in order to avoid circular dependency with the "quiz" package.
	QuizInverseTable = "quizs"
	// QuizColumn is the table column denoting the quiz relation/edge.
	QuizColumn = "quiz_langs"
	// I18nTable is the table the holds the i18n relation/edge.
	I18nTable = "quiz_langs"
	// I18nInverseTable is the table name for the I18n entity.
	// It exists in this package in order to avoid circular dependency with the "i18n" package.
	I18nInverseTable = "i18ns"
	// I18nColumn is the table column denoting the i18n relation/edge.
	I18nColumn = "i18n_quiz_langs"
)

// Columns holds all SQL columns for quizlangs fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the QuizLangs type.
var ForeignKeys = []string{
	"i18n_quiz_langs",
	"quiz_langs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
