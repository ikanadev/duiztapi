// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// AnswersColumns holds the columns for the "answers" table.
	AnswersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "question_answers", Type: field.TypeInt, Nullable: true},
	}
	// AnswersTable holds the schema information for the "answers" table.
	AnswersTable = &schema.Table{
		Name:       "answers",
		Columns:    AnswersColumns,
		PrimaryKey: []*schema.Column{AnswersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "answers_questions_answers",
				Columns: []*schema.Column{AnswersColumns[1]},

				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AnswerLangsColumns holds the columns for the "answer_langs" table.
	AnswerLangsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString, Size: 2147483647},
		{Name: "answer_langs", Type: field.TypeInt, Nullable: true},
		{Name: "i18n_answer_langs", Type: field.TypeInt, Nullable: true},
	}
	// AnswerLangsTable holds the schema information for the "answer_langs" table.
	AnswerLangsTable = &schema.Table{
		Name:       "answer_langs",
		Columns:    AnswerLangsColumns,
		PrimaryKey: []*schema.Column{AnswerLangsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "answer_langs_answers_langs",
				Columns: []*schema.Column{AnswerLangsColumns[2]},

				RefColumns: []*schema.Column{AnswersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "answer_langs_i18ns_answer_langs",
				Columns: []*schema.Column{AnswerLangsColumns[3]},

				RefColumns: []*schema.Column{I18nsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// I18nsColumns holds the columns for the "i18ns" table.
	I18nsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString},
		{Name: "language", Type: field.TypeString},
	}
	// I18nsTable holds the schema information for the "i18ns" table.
	I18nsTable = &schema.Table{
		Name:        "i18ns",
		Columns:     I18nsColumns,
		PrimaryKey:  []*schema.Column{I18nsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// QuestionsColumns holds the columns for the "questions" table.
	QuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "question_correct_answer", Type: field.TypeInt, Nullable: true},
		{Name: "quiz_questions", Type: field.TypeInt, Nullable: true},
	}
	// QuestionsTable holds the schema information for the "questions" table.
	QuestionsTable = &schema.Table{
		Name:       "questions",
		Columns:    QuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "questions_answers_correct_answer",
				Columns: []*schema.Column{QuestionsColumns[1]},

				RefColumns: []*schema.Column{AnswersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "questions_quizs_questions",
				Columns: []*schema.Column{QuestionsColumns[2]},

				RefColumns: []*schema.Column{QuizsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuestionLangsColumns holds the columns for the "question_langs" table.
	QuestionLangsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "body", Type: field.TypeString, Size: 2147483647},
		{Name: "explanation", Type: field.TypeString, Size: 2147483647},
		{Name: "i18n_question_langs", Type: field.TypeInt, Nullable: true},
		{Name: "question_langs", Type: field.TypeInt, Nullable: true},
	}
	// QuestionLangsTable holds the schema information for the "question_langs" table.
	QuestionLangsTable = &schema.Table{
		Name:       "question_langs",
		Columns:    QuestionLangsColumns,
		PrimaryKey: []*schema.Column{QuestionLangsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "question_langs_i18ns_question_langs",
				Columns: []*schema.Column{QuestionLangsColumns[4]},

				RefColumns: []*schema.Column{I18nsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "question_langs_questions_langs",
				Columns: []*schema.Column{QuestionLangsColumns[5]},

				RefColumns: []*schema.Column{QuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// QuizsColumns holds the columns for the "quizs" table.
	QuizsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "url_img", Type: field.TypeString},
	}
	// QuizsTable holds the schema information for the "quizs" table.
	QuizsTable = &schema.Table{
		Name:        "quizs",
		Columns:     QuizsColumns,
		PrimaryKey:  []*schema.Column{QuizsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// QuizLangsColumns holds the columns for the "quiz_langs" table.
	QuizLangsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "i18n_quiz_langs", Type: field.TypeInt, Nullable: true},
		{Name: "quiz_langs", Type: field.TypeInt, Nullable: true},
	}
	// QuizLangsTable holds the schema information for the "quiz_langs" table.
	QuizLangsTable = &schema.Table{
		Name:       "quiz_langs",
		Columns:    QuizLangsColumns,
		PrimaryKey: []*schema.Column{QuizLangsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "quiz_langs_i18ns_quiz_langs",
				Columns: []*schema.Column{QuizLangsColumns[3]},

				RefColumns: []*schema.Column{I18nsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "quiz_langs_quizs_langs",
				Columns: []*schema.Column{QuizLangsColumns[4]},

				RefColumns: []*schema.Column{QuizsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ResponsesColumns holds the columns for the "responses" table.
	ResponsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "answer_responses", Type: field.TypeInt, Nullable: true},
		{Name: "user_responses", Type: field.TypeInt, Nullable: true},
	}
	// ResponsesTable holds the schema information for the "responses" table.
	ResponsesTable = &schema.Table{
		Name:       "responses",
		Columns:    ResponsesColumns,
		PrimaryKey: []*schema.Column{ResponsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "responses_answers_responses",
				Columns: []*schema.Column{ResponsesColumns[2]},

				RefColumns: []*schema.Column{AnswersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "responses_users_responses",
				Columns: []*schema.Column{ResponsesColumns[3]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UserQuizesColumns holds the columns for the "user_quizes" table.
	UserQuizesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "quiz_id", Type: field.TypeInt},
	}
	// UserQuizesTable holds the schema information for the "user_quizes" table.
	UserQuizesTable = &schema.Table{
		Name:       "user_quizes",
		Columns:    UserQuizesColumns,
		PrimaryKey: []*schema.Column{UserQuizesColumns[0], UserQuizesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "user_quizes_user_id",
				Columns: []*schema.Column{UserQuizesColumns[0]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "user_quizes_quiz_id",
				Columns: []*schema.Column{UserQuizesColumns[1]},

				RefColumns: []*schema.Column{QuizsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnswersTable,
		AnswerLangsTable,
		I18nsTable,
		QuestionsTable,
		QuestionLangsTable,
		QuizsTable,
		QuizLangsTable,
		ResponsesTable,
		UsersTable,
		UserQuizesTable,
	}
)

func init() {
	AnswersTable.ForeignKeys[0].RefTable = QuestionsTable
	AnswerLangsTable.ForeignKeys[0].RefTable = AnswersTable
	AnswerLangsTable.ForeignKeys[1].RefTable = I18nsTable
	QuestionsTable.ForeignKeys[0].RefTable = AnswersTable
	QuestionsTable.ForeignKeys[1].RefTable = QuizsTable
	QuestionLangsTable.ForeignKeys[0].RefTable = I18nsTable
	QuestionLangsTable.ForeignKeys[1].RefTable = QuestionsTable
	QuizLangsTable.ForeignKeys[0].RefTable = I18nsTable
	QuizLangsTable.ForeignKeys[1].RefTable = QuizsTable
	ResponsesTable.ForeignKeys[0].RefTable = AnswersTable
	ResponsesTable.ForeignKeys[1].RefTable = UsersTable
	UserQuizesTable.ForeignKeys[0].RefTable = UsersTable
	UserQuizesTable.ForeignKeys[1].RefTable = QuizsTable
}
